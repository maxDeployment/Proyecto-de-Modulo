{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ext_maxgomez/Desktop/Evaluacion de Modulo/evaluacion_modulo/src/context/proyectos/proyectoState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport proyectoContext from './proyectoContext';\nimport proyectoReducer from './proyectoReducer';\nimport { FORMULARIO_PROYECTO, OBTENER_PROYECTOS, AGREGAR_PROYECTO } from '../../types';\n\nconst ProyectoState = props => {\n  _s();\n\n  //Estos valores deben venir en la base de datos\n  const proyectos = [{\n    id: 1,\n    nombre: 'Trabajo de matematicas'\n  }, {\n    id: 2,\n    nombre: 'Intranet'\n  }, {\n    id: 3,\n    nombre: 'Proyecto de diseño web'\n  }];\n  const initialState = {\n    proyectos: [],\n    formulario: false\n  }; //Dispatch para ejecutar las acciones\n\n  const [state, dispatch] = useReducer(proyectoReducer, initialState); //Serie de funciones para el CRUD (Create, Restored, Update & Deleted)\n\n  const mostrarFormulario = () => {\n    dispatch({\n      type: FORMULARIO_PROYECTO\n    });\n  }; //Obtener los proyectos guardados\n\n\n  const obtenerProyectos = () => {\n    dispatch({\n      type: OBTENER_PROYECTOS,\n      payload: proyectos\n    });\n  }; //Agregar un nuevo proyectos\n\n\n  const agregarProyecto = proyecto => {\n    proyecto.id == uuidv4(); // dispatch({\n    //     type: OBTENER_PROYECTOS,\n    //     payload: proyectos\n    // })\n  };\n\n  return /*#__PURE__*/_jsxDEV(proyectoContext.Provider, {\n    value: {\n      proyectos: state.proyectos,\n      formulario: state.formulario,\n      mostrarFormulario,\n      obtenerProyectos\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProyectoState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ProyectoState;\nexport default ProyectoState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProyectoState\");","map":{"version":3,"sources":["/Users/ext_maxgomez/Desktop/Evaluacion de Modulo/evaluacion_modulo/src/context/proyectos/proyectoState.js"],"names":["React","useReducer","v4","uuidv4","proyectoContext","proyectoReducer","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREGAR_PROYECTO","ProyectoState","props","proyectos","id","nombre","initialState","formulario","state","dispatch","mostrarFormulario","type","obtenerProyectos","payload","agregarProyecto","proyecto","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SACIC,mBADJ,EAEIC,iBAFJ,EAGIC,gBAHJ,QAIQ,aAJR;;AAMA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAAA;;AAE3B;AACA,QAAMC,SAAS,GAAG,CACd;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,MAAM,EAAE;AAAhB,GADc,EAEd;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,MAAM,EAAE;AAAhB,GAFc,EAGd;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,MAAM,EAAE;AAAhB,GAHc,CAAlB;AAMA,QAAMC,YAAY,GAAG;AACjBH,IAAAA,SAAS,EAAG,EADK;AAEjBI,IAAAA,UAAU,EAAG;AAFI,GAArB,CAT2B,CAc3B;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,UAAU,CAACI,eAAD,EAAkBS,YAAlB,CAApC,CAf2B,CAiB3B;;AACA,QAAMI,iBAAiB,GAAG,MAAM;AAC5BD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEb;AADD,KAAD,CAAR;AAGH,GAJD,CAlB2B,CAwB3B;;;AACA,QAAMc,gBAAgB,GAAG,MAAM;AAC3BH,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEZ,iBADD;AAELc,MAAAA,OAAO,EAAEV;AAFJ,KAAD,CAAR;AAIH,GALD,CAzB2B,CAgC3B;;;AACA,QAAMW,eAAe,GAAGC,QAAQ,IAAI;AAChCA,IAAAA,QAAQ,CAACX,EAAT,IAAeT,MAAM,EAArB,CADgC,CAGhC;AACA;AACA;AACA;AACH,GAPD;;AASA,sBACI,QAAC,eAAD,CAAiB,QAAjB;AACI,IAAA,KAAK,EAAE;AACHQ,MAAAA,SAAS,EAAEK,KAAK,CAACL,SADd;AAEHI,MAAAA,UAAU,EAAEC,KAAK,CAACD,UAFf;AAGHG,MAAAA,iBAHG;AAIHE,MAAAA;AAJG,KADX;AAAA,cAQKV,KAAK,CAACc;AARX;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAtDD;;GAAMf,a;;KAAAA,a;AAwDN,eAAeA,aAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport proyectoContext from './proyectoContext';\nimport proyectoReducer from './proyectoReducer';\nimport { \n    FORMULARIO_PROYECTO,\n    OBTENER_PROYECTOS,\n    AGREGAR_PROYECTO\n } from '../../types';\n\nconst ProyectoState = props => {\n\n    //Estos valores deben venir en la base de datos\n    const proyectos = [\n        {id: 1, nombre: 'Trabajo de matematicas'},\n        {id: 2, nombre: 'Intranet'},\n        {id: 3, nombre: 'Proyecto de diseño web'}\n    ];\n\n    const initialState = {\n        proyectos : [],\n        formulario : false\n    }\n\n    //Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(proyectoReducer, initialState);\n    \n    //Serie de funciones para el CRUD (Create, Restored, Update & Deleted)\n    const mostrarFormulario = () => {\n        dispatch({\n            type: FORMULARIO_PROYECTO\n        })\n    }\n\n    //Obtener los proyectos guardados\n    const obtenerProyectos = () => {\n        dispatch({\n            type: OBTENER_PROYECTOS,\n            payload: proyectos\n        })\n    }\n\n    //Agregar un nuevo proyectos\n    const agregarProyecto = proyecto => {\n        proyecto.id == uuidv4();\n\n        // dispatch({\n        //     type: OBTENER_PROYECTOS,\n        //     payload: proyectos\n        // })\n    }\n\n    return (\n        <proyectoContext.Provider\n            value={{\n                proyectos: state.proyectos,\n                formulario: state.formulario,\n                mostrarFormulario,\n                obtenerProyectos\n            }}\n        >\n            {props.children}\n        </proyectoContext.Provider>\n    );\n};\n\nexport default ProyectoState;"]},"metadata":{},"sourceType":"module"}