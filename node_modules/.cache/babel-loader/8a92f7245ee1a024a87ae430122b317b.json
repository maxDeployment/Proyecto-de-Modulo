{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ext_maxgomez/Desktop/Evaluacion de Modulo/evaluacion_modulo/src/components/proyectos/NuevoProyecto.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useContext, useState } from 'react';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\n\nconst NuevoProyecto = () => {\n  _s();\n\n  //Obtener el state del formulario que se encuentra en el initialState dentro del archivo ProyectoState\n  //el useContext que estamos importando aqui (un nuevo hooks) nos permite consumir el proyectoContext y asignar su valor a una variable\n  const proyectosContext = useContext(proyectoContext);\n  const {\n    formulario,\n    agregarProyecto,\n    errorformulario,\n    mostrarError,\n    mostrarFormulario\n  } = proyectosContext; //State del proyecto\n\n  const [proyecto, setProyecto] = useState({\n    nombre: ''\n  }); //destructury\n\n  const {\n    nombre\n  } = proyecto;\n\n  const onSubmitProyecto = e => {\n    e.preventDefault(); //Validar el proyecto\n\n    if (nombre === '') {\n      return;\n    } //Agregar al state\n\n\n    agregarProyecto(proyecto); //Reiniciar el form\n\n    setProyecto({\n      nombre: ''\n    });\n  };\n\n  const onChangeProyecto = e => {\n    setProyecto({ ...proyecto,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-block btn-primario\",\n      onClick: () => mostrarFormulario(),\n      children: \"Crear Nuevo Proyecto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), formulario ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"formulario-nuevo-proyecto\",\n      onSubmit: onSubmitProyecto,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input-text\",\n        placeholder: \"Nombre Proyecto\",\n        name: \"nombre\",\n        value: nombre,\n        onChange: onChangeProyecto\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-primario btn-block btn-confirmar-proyecto\",\n        value: \"Confirmar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }, this) : null, errorformulario ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mensaje error\",\n      children: \"El nombre del proyecto es obligatorio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NuevoProyecto, \"+q9+mTHzoWHDie0B1RhmDFSvIRU=\");\n\n_c = NuevoProyecto;\nexport default NuevoProyecto;\n\nvar _c;\n\n$RefreshReg$(_c, \"NuevoProyecto\");","map":{"version":3,"sources":["/Users/ext_maxgomez/Desktop/Evaluacion de Modulo/evaluacion_modulo/src/components/proyectos/NuevoProyecto.js"],"names":["React","Fragment","useContext","useState","proyectoContext","NuevoProyecto","proyectosContext","formulario","agregarProyecto","errorformulario","mostrarError","mostrarFormulario","proyecto","setProyecto","nombre","onSubmitProyecto","e","preventDefault","onChangeProyecto","target","name","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAOC,eAAP,MAA4B,yCAA5B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAExB;AACA;AACA,QAAMC,gBAAgB,GAAGJ,UAAU,CAACE,eAAD,CAAnC;AACA,QAAM;AACFG,IAAAA,UADE;AAEFC,IAAAA,eAFE;AAGFC,IAAAA,eAHE;AAIFC,IAAAA,YAJE;AAKFC,IAAAA;AALE,MAMFL,gBANJ,CALwB,CAaxB;;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC;AACrCW,IAAAA,MAAM,EAAE;AAD6B,GAAD,CAAxC,CAdwB,CAkBxB;;AACA,QAAM;AAAEA,IAAAA;AAAF,MAAaF,QAAnB;;AAEA,QAAMG,gBAAgB,GAAGC,CAAC,IAAI;AAC1BA,IAAAA,CAAC,CAACC,cAAF,GAD0B,CAG1B;;AACA,QAAIH,MAAM,KAAK,EAAf,EAAmB;AACf;AACH,KANyB,CAQ1B;;;AACAN,IAAAA,eAAe,CAACI,QAAD,CAAf,CAT0B,CAW1B;;AACAC,IAAAA,WAAW,CAAC;AACRC,MAAAA,MAAM,EAAE;AADA,KAAD,CAAX;AAGH,GAfD;;AAiBA,QAAMI,gBAAgB,GAAGF,CAAC,IAAI;AAC1BH,IAAAA,WAAW,CAAC,EACR,GAAGD,QADK;AAER,OAACI,CAAC,CAACG,MAAF,CAASC,IAAV,GAAkBJ,CAAC,CAACG,MAAF,CAASE;AAFnB,KAAD,CAAX;AAIH,GALD;;AAOA,sBACI,QAAC,QAAD;AAAA,4BACI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,SAAS,EAAC,4BAFd;AAGI,MAAA,OAAO,EAAE,MAAMV,iBAAiB,EAHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAUQJ,UAAU,gBACN;AACJ,MAAA,SAAS,EAAC,2BADN;AAEJ,MAAA,QAAQ,EAAEQ,gBAFN;AAAA,8BAIJ;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,SAAS,EAAC,YAFd;AAGI,QAAA,WAAW,EAAC,iBAHhB;AAII,QAAA,IAAI,EAAC,QAJT;AAKI,QAAA,KAAK,EAAED,MALX;AAMI,QAAA,QAAQ,EAAEI;AANd;AAAA;AAAA;AAAA;AAAA,cAJI,eAaJ;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,SAAS,EAAC,mDAFd;AAGI,QAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,cAbI;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,GAoBN,IA9BZ,EAgCMT,eAAe,gBAAG;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,GAA4E,IAhCjG;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqCH,CAlFD;;GAAMJ,a;;KAAAA,a;AAoFN,eAAeA,aAAf","sourcesContent":["import React, { Fragment, useContext, useState } from 'react';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\n\nconst NuevoProyecto = () => {\n\n    //Obtener el state del formulario que se encuentra en el initialState dentro del archivo ProyectoState\n    //el useContext que estamos importando aqui (un nuevo hooks) nos permite consumir el proyectoContext y asignar su valor a una variable\n    const proyectosContext = useContext(proyectoContext);\n    const { \n        formulario,\n        agregarProyecto,\n        errorformulario,\n        mostrarError,\n        mostrarFormulario\n    } = proyectosContext;\n\n    //State del proyecto\n    const [proyecto, setProyecto] = useState({\n        nombre: ''\n    });\n\n    //destructury\n    const { nombre } = proyecto;\n\n    const onSubmitProyecto = e => {\n        e.preventDefault();\n\n        //Validar el proyecto\n        if (nombre === '') {\n            return;\n        }\n\n        //Agregar al state\n        agregarProyecto(proyecto);\n\n        //Reiniciar el form\n        setProyecto({\n            nombre: ''\n        })\n    }\n\n    const onChangeProyecto = e => {\n        setProyecto({\n            ...proyecto,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    return (\n        <Fragment>\n            <button\n                type=\"button\"\n                className=\"btn btn-block btn-primario\"\n                onClick={() => mostrarFormulario()}\n            >\n                Crear Nuevo Proyecto\n            </button>\n\n            {\n                formulario ? (\n                    <form \n                className=\"formulario-nuevo-proyecto\"\n                onSubmit={onSubmitProyecto}\n            >\n                <input \n                    type=\"text\"\n                    className=\"input-text\"\n                    placeholder=\"Nombre Proyecto\"\n                    name=\"nombre\"\n                    value={nombre}\n                    onChange={onChangeProyecto}\n                />\n\n                <input \n                    type=\"submit\"\n                    className=\"btn btn-primario btn-block btn-confirmar-proyecto\"\n                    value=\"Confirmar\"\n                />\n            </form>\n                ) : null\n            }\n            { errorformulario ? <p className=\"mensaje error\">El nombre del proyecto es obligatorio</p> : null}\n            \n        </Fragment>\n    );\n};\n\nexport default NuevoProyecto;"]},"metadata":{},"sourceType":"module"}